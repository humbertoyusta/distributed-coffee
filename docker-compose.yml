version: '3.7'

x-backend-defaults: &backend-defaults
  build:
    context: ./backend
    dockerfile: ../docker/Dockerfile-backend
  environment:
    - DATABASE_HOST=db
    - DATABASE_USERNAME=root
    - DATABASE_PASSWORD=password
    - DATABASE_PORT=5432
    - DATABASE_NAME=distributed_app
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - REDIS_PASSWORD=password
    - REDIS_DB=0
    - USE_SQS=false
    - PYTHONUNBUFFERED=1
  networks:
    - distributed-app
  depends_on:
    - db
  env_file:
    - backend/.env
  volumes:
    - ./backend:/app

services:
  loadbalancer:
    build:
      context: ./loadbalancer
      dockerfile: ../docker/Dockerfile-loadbalancer
    ports:
      - "8080:8080"
    environment:
      - NUMBER_OF_BACKENDS=3
      - PYTHONUNBUFFERED=1
    networks:
      - distributed-app
    volumes:
      - ./loadbalancer:/app
    env_file:
      - ./loadbalancer/.env

  backend-1:
    <<: *backend-defaults
    ports:
      - "8081:8080"

  backend-2:
    <<: *backend-defaults
    ports:
      - "8082:8080"

  backend-3:
    <<: *backend-defaults
    ports:
      - "8083:8080"

#  notification_service:
#    build:
#      context: ./notification_service
#      dockerfile: ../docker/Dockerfile-notification_service
#    environment:
#      - PYTHONUNBUFFERED=1
#    env_file:
#      - notification_service/.env
#    networks:
#      - distributed-app

  db:
    image: postgres:15.3-alpine3.18
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=distributed_app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - distributed-app

  redis:
    image: redis:7.2-rc2-alpine3.18
    command: redis-server --appendonly yes --requirepass password
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - distributed-app

volumes:
  postgres_data:
  redis-data:

networks:
  distributed-app:
